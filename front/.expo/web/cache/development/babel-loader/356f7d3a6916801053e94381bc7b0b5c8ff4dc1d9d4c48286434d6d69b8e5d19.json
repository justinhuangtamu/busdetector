{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"mode\", \"edges\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSafeAreaInsets } from \"./SafeAreaContext\";\nvar TOP = 8,\n  RIGHT = 4,\n  BOTTOM = 2,\n  LEFT = 1,\n  ALL = 15;\nvar edgeBitmaskMap = {\n  top: TOP,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT\n};\nexport function SafeAreaView(_ref) {\n  var _ref$style = _ref.style,\n    style = _ref$style === void 0 ? {} : _ref$style,\n    mode = _ref.mode,\n    edges = _ref.edges,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var insets = useSafeAreaInsets();\n  var edgeBitmask = edges != null ? edges.reduce(function (accum, edge) {\n    return accum | edgeBitmaskMap[edge];\n  }, 0) : ALL;\n  var appliedStyle = React.useMemo(function () {\n    var insetTop = edgeBitmask & TOP ? insets.top : 0;\n    var insetRight = edgeBitmask & RIGHT ? insets.right : 0;\n    var insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0;\n    var insetLeft = edgeBitmask & LEFT ? insets.left : 0;\n    var flatStyle = StyleSheet.flatten(style);\n    if (mode === 'margin') {\n      var _flatStyle$margin = flatStyle.margin,\n        margin = _flatStyle$margin === void 0 ? 0 : _flatStyle$margin,\n        _flatStyle$marginVert = flatStyle.marginVertical,\n        marginVertical = _flatStyle$marginVert === void 0 ? margin : _flatStyle$marginVert,\n        _flatStyle$marginHori = flatStyle.marginHorizontal,\n        marginHorizontal = _flatStyle$marginHori === void 0 ? margin : _flatStyle$marginHori,\n        _flatStyle$marginTop = flatStyle.marginTop,\n        marginTop = _flatStyle$marginTop === void 0 ? marginVertical : _flatStyle$marginTop,\n        _flatStyle$marginRigh = flatStyle.marginRight,\n        marginRight = _flatStyle$marginRigh === void 0 ? marginHorizontal : _flatStyle$marginRigh,\n        _flatStyle$marginBott = flatStyle.marginBottom,\n        marginBottom = _flatStyle$marginBott === void 0 ? marginVertical : _flatStyle$marginBott,\n        _flatStyle$marginLeft = flatStyle.marginLeft,\n        marginLeft = _flatStyle$marginLeft === void 0 ? marginHorizontal : _flatStyle$marginLeft;\n      var marginStyle = {\n        marginTop: marginTop + insetTop,\n        marginRight: marginRight + insetRight,\n        marginBottom: marginBottom + insetBottom,\n        marginLeft: marginLeft + insetLeft\n      };\n      return [style, marginStyle];\n    } else {\n      var _flatStyle$padding = flatStyle.padding,\n        padding = _flatStyle$padding === void 0 ? 0 : _flatStyle$padding,\n        _flatStyle$paddingVer = flatStyle.paddingVertical,\n        paddingVertical = _flatStyle$paddingVer === void 0 ? padding : _flatStyle$paddingVer,\n        _flatStyle$paddingHor = flatStyle.paddingHorizontal,\n        paddingHorizontal = _flatStyle$paddingHor === void 0 ? padding : _flatStyle$paddingHor,\n        _flatStyle$paddingTop = flatStyle.paddingTop,\n        paddingTop = _flatStyle$paddingTop === void 0 ? paddingVertical : _flatStyle$paddingTop,\n        _flatStyle$paddingRig = flatStyle.paddingRight,\n        paddingRight = _flatStyle$paddingRig === void 0 ? paddingHorizontal : _flatStyle$paddingRig,\n        _flatStyle$paddingBot = flatStyle.paddingBottom,\n        paddingBottom = _flatStyle$paddingBot === void 0 ? paddingVertical : _flatStyle$paddingBot,\n        _flatStyle$paddingLef = flatStyle.paddingLeft,\n        paddingLeft = _flatStyle$paddingLef === void 0 ? paddingHorizontal : _flatStyle$paddingLef;\n      var paddingStyle = {\n        paddingTop: paddingTop + insetTop,\n        paddingRight: paddingRight + insetRight,\n        paddingBottom: paddingBottom + insetBottom,\n        paddingLeft: paddingLeft + insetLeft\n      };\n      return [style, paddingStyle];\n    }\n  }, [style, insets, mode, edgeBitmask]);\n  return React.createElement(View, _extends({\n    style: appliedStyle\n  }, rest));\n}","map":{"version":3,"mappings":"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","names":["React","useSafeAreaInsets","TOP","RIGHT","BOTTOM","LEFT","ALL","edgeBitmaskMap","top","right","bottom","left","SafeAreaView","_ref","style","mode","edges","rest","insets","edgeBitmask","reduce","accum","edge","appliedStyle","useMemo","insetTop","insetRight","insetBottom","insetLeft","flatStyle","StyleSheet","flatten","margin","_flatStyle$marginVert","marginVertical","_flatStyle$marginHori","marginHorizontal","_flatStyle$marginTop","marginTop","_flatStyle$marginRigh","marginRight","_flatStyle$marginBott","marginBottom","_flatStyle$marginLeft","marginLeft","marginStyle","padding","_flatStyle$paddingVer","paddingVertical","_flatStyle$paddingHor","paddingHorizontal","_flatStyle$paddingTop","paddingTop","_flatStyle$paddingRig","paddingRight","_flatStyle$paddingBot","paddingBottom","_flatStyle$paddingLef","paddingLeft","paddingStyle","View"],"sources":["C:\\Users\\rdoer\\my-app\\BusDetector\\front\\node_modules\\react-native-safe-area-context\\src\\SafeAreaView.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useSafeAreaInsets } from './SafeAreaContext';\nimport type { Edge, NativeSafeAreaViewProps } from './SafeArea.types';\n\n// prettier-ignore\nconst TOP    = 0b1000,\n      RIGHT  = 0b0100,\n      BOTTOM = 0b0010,\n      LEFT   = 0b0001,\n      ALL    = 0b1111;\n\n/* eslint-disable no-bitwise */\n\nconst edgeBitmaskMap: Record<Edge, number> = {\n  top: TOP,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT,\n};\n\nexport function SafeAreaView({\n  style = {},\n  mode,\n  edges,\n  ...rest\n}: NativeSafeAreaViewProps) {\n  const insets = useSafeAreaInsets();\n\n  const edgeBitmask =\n    edges != null\n      ? edges.reduce((accum, edge) => accum | edgeBitmaskMap[edge], 0)\n      : ALL;\n\n  const appliedStyle = React.useMemo(() => {\n    const insetTop = edgeBitmask & TOP ? insets.top : 0;\n    const insetRight = edgeBitmask & RIGHT ? insets.right : 0;\n    const insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0;\n    const insetLeft = edgeBitmask & LEFT ? insets.left : 0;\n\n    const flatStyle = StyleSheet.flatten(style) as Record<string, number>;\n\n    if (mode === 'margin') {\n      const {\n        margin = 0,\n        marginVertical = margin,\n        marginHorizontal = margin,\n        marginTop = marginVertical,\n        marginRight = marginHorizontal,\n        marginBottom = marginVertical,\n        marginLeft = marginHorizontal,\n      } = flatStyle;\n\n      const marginStyle = {\n        marginTop: marginTop + insetTop,\n        marginRight: marginRight + insetRight,\n        marginBottom: marginBottom + insetBottom,\n        marginLeft: marginLeft + insetLeft,\n      };\n\n      return [style, marginStyle];\n    } else {\n      const {\n        padding = 0,\n        paddingVertical = padding,\n        paddingHorizontal = padding,\n        paddingTop = paddingVertical,\n        paddingRight = paddingHorizontal,\n        paddingBottom = paddingVertical,\n        paddingLeft = paddingHorizontal,\n      } = flatStyle;\n\n      const paddingStyle = {\n        paddingTop: paddingTop + insetTop,\n        paddingRight: paddingRight + insetRight,\n        paddingBottom: paddingBottom + insetBottom,\n        paddingLeft: paddingLeft + insetLeft,\n      };\n\n      return [style, paddingStyle];\n    }\n  }, [style, insets, mode, edgeBitmask]);\n\n  return <View style={appliedStyle} {...rest} />;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}