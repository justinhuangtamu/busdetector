{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NavigationContext, NavigationRouteContext } from '@react-navigation/native';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaFrame, useSafeAreaInsets } from 'react-native-safe-area-context';\nimport Background from \"./Background\";\nimport getDefaultHeaderHeight from \"./Header/getDefaultHeaderHeight\";\nimport HeaderHeightContext from \"./Header/HeaderHeightContext\";\nimport HeaderShownContext from \"./Header/HeaderShownContext\";\nexport default function Screen(props) {\n  var dimensions = useSafeAreaFrame();\n  var insets = useSafeAreaInsets();\n  var isParentHeaderShown = React.useContext(HeaderShownContext);\n  var parentHeaderHeight = React.useContext(HeaderHeightContext);\n  var focused = props.focused,\n    _props$modal = props.modal,\n    modal = _props$modal === void 0 ? false : _props$modal,\n    header = props.header,\n    _props$headerShown = props.headerShown,\n    headerShown = _props$headerShown === void 0 ? true : _props$headerShown,\n    headerTransparent = props.headerTransparent,\n    _props$headerStatusBa = props.headerStatusBarHeight,\n    headerStatusBarHeight = _props$headerStatusBa === void 0 ? isParentHeaderShown ? 0 : insets.top : _props$headerStatusBa,\n    navigation = props.navigation,\n    route = props.route,\n    children = props.children,\n    style = props.style;\n  var _React$useState = React.useState(function () {\n      return getDefaultHeaderHeight(dimensions, modal, headerStatusBarHeight);\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    headerHeight = _React$useState2[0],\n    setHeaderHeight = _React$useState2[1];\n  return React.createElement(Background, {\n    accessibilityElementsHidden: !focused,\n    importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n    style: [styles.container, style]\n  }, React.createElement(View, {\n    style: styles.content\n  }, React.createElement(HeaderShownContext.Provider, {\n    value: isParentHeaderShown || headerShown !== false\n  }, React.createElement(HeaderHeightContext.Provider, {\n    value: headerShown ? headerHeight : parentHeaderHeight != null ? parentHeaderHeight : 0\n  }, children))), headerShown ? React.createElement(NavigationContext.Provider, {\n    value: navigation\n  }, React.createElement(NavigationRouteContext.Provider, {\n    value: route\n  }, React.createElement(View, {\n    onLayout: function onLayout(e) {\n      var height = e.nativeEvent.layout.height;\n      setHeaderHeight(height);\n    },\n    style: headerTransparent ? styles.absolute : null\n  }, header))) : null);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse'\n  },\n  content: {\n    flex: 1\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  }\n});","map":{"version":3,"mappings":";AAAA,SACEA,iBAAiB,EAEjBC,sBAAsB,QAGjB,0BAA0B;AACjC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAA;AAAA;AAE9B,SACEC,gBAAgB,EAChBC,iBAAiB,QACZ,gCAAgC;AAEvC,OAAOC,UAAU;AACjB,OAAOC,sBAAsB;AAC7B,OAAOC,mBAAmB;AAC1B,OAAOC,kBAAkB;AAezB,eAAe,SAASC,MAAMA,CAACC,KAAY,EAAE;EAC3C,IAAMC,UAAU,GAAGR,gBAAgB,EAAE;EACrC,IAAMS,MAAM,GAAGR,iBAAiB,EAAE;EAElC,IAAMS,mBAAmB,GAAGX,KAAK,CAACY,UAAU,CAACN,kBAAkB,CAAC;EAChE,IAAMO,kBAAkB,GAAGb,KAAK,CAACY,UAAU,CAACP,mBAAmB,CAAC;EAEhE,IACES,OAAO,GAULN,KAAK,CAVPM,OAAO;IAAAC,eAULP,KAAK,CATPQ,KAAK;IAALA,KAAK,6BAAG,KAAK;IACbC,MAAM,GAQJT,KAAK,CARPS,MAAM;IAAAC,qBAQJV,KAAK,CAPPW,WAAW;IAAXA,WAAW,mCAAG,IAAI;IAClBC,iBAAiB,GAMfZ,KAAK,CANPY,iBAAiB;IAAAC,wBAMfb,KAAK,CALPc,qBAAqB;IAArBA,qBAAqB,sCAAGX,mBAAmB,GAAG,CAAC,GAAGD,MAAM,CAACa,GAAG;IAC5DC,UAAU,GAIRhB,KAAK,CAJPgB,UAAU;IACVC,KAAK,GAGHjB,KAAK,CAHPiB,KAAK;IACLC,QAAQ,GAENlB,KAAK,CAFPkB,QAAQ;IACRC,QACEnB,KAAK,CADPmB;EAGF,sBAAwC3B,KAAK,CAAC4B,QAAQ,CAAC;MAAA,OACrDxB,sBAAsB,CAACK,UAAU,EAAEO,KAAK,EAAEM,qBAAqB,CAAC;IAAA,EACjE;IAAAO;IAFMC,YAAY;IAAEC,eAAe;EAIpC,OACE/B,oBAACG,UAAU;IACT6B,2BAA2B,EAAE,CAAClB,OAAQ;IACtCmB,yBAAyB,EAAEnB,OAAO,GAAG,MAAM,GAAG,qBAAsB;IACpEa,KAAK,EAAE,CAACO,MAAM,CAACC,SAAS,EAAER,KAAK;EAAE,GAEjC3B,oBAACoC,IAAI;IAACT,KAAK,EAAEO,MAAM,CAACG;EAAQ,GAC1BrC,oBAACM,kBAAkB,CAACgC,QAAQ;IAC1BC,KAAK,EAAE5B,mBAAmB,IAAIQ,WAAW,KAAK;EAAM,GAEpDnB,oBAACK,mBAAmB,CAACiC,QAAQ;IAC3BC,KAAK,EAAEpB,WAAW,GAAGW,YAAY,GAAGjB,kBAAkB,WAAlBA,kBAAkB,GAAI;EAAE,GAE3Da,QAAQ,CACoB,CACH,CACzB,EACNP,WAAW,GACVnB,oBAACF,iBAAiB,CAACwC,QAAQ;IAACC,KAAK,EAAEf;EAAW,GAC5CxB,oBAACD,sBAAsB,CAACuC,QAAQ;IAACC,KAAK,EAAEd;EAAM,GAC5CzB,oBAACoC,IAAI;IACHI,QAAQ,EAAGC,mBAAC,EAAK;MACf,IAAQC,SAAWD,CAAC,CAACE,WAAW,CAACC,MAAM,CAA/BF;MAERX,eAAe,CAACW,MAAM,CAAC;IACzB,CAAE;IACFf,KAAK,EAAEP,iBAAiB,GAAGc,MAAM,CAACW,QAAQ,GAAG;EAAK,GAEjD5B,MAAM,CACF,CACyB,CACP,GAC3B,IAAI,CACG;AAEjB;AAEA,IAAMiB,MAAM,GAAGY,UAAU,CAACC,MAAM,CAAC;EAC/BZ,SAAS,EAAE;IACTa,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE;EACjB,CAAC;EAEDZ,OAAO,EAAE;IACPW,IAAI,EAAE;EACR,CAAC;EACDH,QAAQ,EAAE;IACRK,QAAQ,EAAE,UAAU;IACpB3B,GAAG,EAAE,CAAC;IACN4B,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE;EACT;AACF,CAAC,CAAC","names":["NavigationContext","NavigationRouteContext","React","useSafeAreaFrame","useSafeAreaInsets","Background","getDefaultHeaderHeight","HeaderHeightContext","HeaderShownContext","Screen","props","dimensions","insets","isParentHeaderShown","useContext","parentHeaderHeight","focused","_props$modal","modal","header","_props$headerShown","headerShown","headerTransparent","_props$headerStatusBa","headerStatusBarHeight","top","navigation","route","children","style","useState","_React$useState2","headerHeight","setHeaderHeight","accessibilityElementsHidden","importantForAccessibility","styles","container","View","content","Provider","value","onLayout","e","height","nativeEvent","layout","absolute","StyleSheet","create","flex","flexDirection","position","left","right"],"sources":["C:\\Users\\rdoer\\my-app\\BusDetector\\front\\node_modules\\@react-navigation\\elements\\src\\Screen.tsx"],"sourcesContent":["import {\n  NavigationContext,\n  NavigationProp,\n  NavigationRouteContext,\n  ParamListBase,\n  RouteProp,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\n\nimport Background from './Background';\nimport getDefaultHeaderHeight from './Header/getDefaultHeaderHeight';\nimport HeaderHeightContext from './Header/HeaderHeightContext';\nimport HeaderShownContext from './Header/HeaderShownContext';\n\ntype Props = {\n  focused: boolean;\n  modal?: boolean;\n  navigation: NavigationProp<ParamListBase>;\n  route: RouteProp<ParamListBase>;\n  header: React.ReactNode;\n  headerShown?: boolean;\n  headerStatusBarHeight?: number;\n  headerTransparent?: boolean;\n  style?: StyleProp<ViewStyle>;\n  children: React.ReactNode;\n};\n\nexport default function Screen(props: Props) {\n  const dimensions = useSafeAreaFrame();\n  const insets = useSafeAreaInsets();\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n\n  const {\n    focused,\n    modal = false,\n    header,\n    headerShown = true,\n    headerTransparent,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n    navigation,\n    route,\n    children,\n    style,\n  } = props;\n\n  const [headerHeight, setHeaderHeight] = React.useState(() =>\n    getDefaultHeaderHeight(dimensions, modal, headerStatusBarHeight)\n  );\n\n  return (\n    <Background\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      style={[styles.container, style]}\n    >\n      <View style={styles.content}>\n        <HeaderShownContext.Provider\n          value={isParentHeaderShown || headerShown !== false}\n        >\n          <HeaderHeightContext.Provider\n            value={headerShown ? headerHeight : parentHeaderHeight ?? 0}\n          >\n            {children}\n          </HeaderHeightContext.Provider>\n        </HeaderShownContext.Provider>\n      </View>\n      {headerShown ? (\n        <NavigationContext.Provider value={navigation}>\n          <NavigationRouteContext.Provider value={route}>\n            <View\n              onLayout={(e) => {\n                const { height } = e.nativeEvent.layout;\n\n                setHeaderHeight(height);\n              }}\n              style={headerTransparent ? styles.absolute : null}\n            >\n              {header}\n            </View>\n          </NavigationRouteContext.Provider>\n        </NavigationContext.Provider>\n      ) : null}\n    </Background>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  // This is necessary to avoid applying 'column-reverse' to screen content\n  content: {\n    flex: 1,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}